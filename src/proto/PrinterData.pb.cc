// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PrinterData.proto

#include "PrinterData.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_PrinterData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrintConfig_PrinterData_2eproto;
namespace Printer {
class StatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatusRequest> _instance;
} _StatusRequest_default_instance_;
class AddPrintConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPrintConfig> _instance;
} _AddPrintConfig_default_instance_;
class ChangeTempControlDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChangeTempControl> _instance;
} _ChangeTempControl_default_instance_;
class RemovePrintConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePrintConfig> _instance;
} _RemovePrintConfig_default_instance_;
class PrintConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrintConfig> _instance;
} _PrintConfig_default_instance_;
class PrinterStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrinterStatus> _instance;
} _PrinterStatus_default_instance_;
}  // namespace Printer
static void InitDefaultsscc_info_AddPrintConfig_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Printer::_AddPrintConfig_default_instance_;
    new (ptr) ::Printer::AddPrintConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Printer::AddPrintConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddPrintConfig_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddPrintConfig_PrinterData_2eproto}, {
      &scc_info_PrintConfig_PrinterData_2eproto.base,}};

static void InitDefaultsscc_info_ChangeTempControl_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Printer::_ChangeTempControl_default_instance_;
    new (ptr) ::Printer::ChangeTempControl();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Printer::ChangeTempControl::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChangeTempControl_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChangeTempControl_PrinterData_2eproto}, {}};

static void InitDefaultsscc_info_PrintConfig_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Printer::_PrintConfig_default_instance_;
    new (ptr) ::Printer::PrintConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Printer::PrintConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrintConfig_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrintConfig_PrinterData_2eproto}, {}};

static void InitDefaultsscc_info_PrinterStatus_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Printer::_PrinterStatus_default_instance_;
    new (ptr) ::Printer::PrinterStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Printer::PrinterStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrinterStatus_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PrinterStatus_PrinterData_2eproto}, {
      &scc_info_PrintConfig_PrinterData_2eproto.base,}};

static void InitDefaultsscc_info_RemovePrintConfig_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Printer::_RemovePrintConfig_default_instance_;
    new (ptr) ::Printer::RemovePrintConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Printer::RemovePrintConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RemovePrintConfig_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RemovePrintConfig_PrinterData_2eproto}, {
      &scc_info_PrintConfig_PrinterData_2eproto.base,}};

static void InitDefaultsscc_info_StatusRequest_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Printer::_StatusRequest_default_instance_;
    new (ptr) ::Printer::StatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Printer::StatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatusRequest_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StatusRequest_PrinterData_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_PrinterData_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_PrinterData_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_PrinterData_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_PrinterData_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Printer::StatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Printer::StatusRequest, include_print_configs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Printer::AddPrintConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Printer::AddPrintConfig, print_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Printer::ChangeTempControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Printer::ChangeTempControl, isactive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Printer::RemovePrintConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Printer::RemovePrintConfig, print_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Printer::PrintConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Printer::PrintConfig, temperature_),
  PROTOBUF_FIELD_OFFSET(::Printer::PrintConfig, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Printer::PrinterStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Printer::PrinterStatus, is_temp_control_active_),
  PROTOBUF_FIELD_OFFSET(::Printer::PrinterStatus, temperature_outside_),
  PROTOBUF_FIELD_OFFSET(::Printer::PrinterStatus, temperature_inside_top_),
  PROTOBUF_FIELD_OFFSET(::Printer::PrinterStatus, temperature_inside_bottom_),
  PROTOBUF_FIELD_OFFSET(::Printer::PrinterStatus, current_print_config_),
  PROTOBUF_FIELD_OFFSET(::Printer::PrinterStatus, print_configs_),
  PROTOBUF_FIELD_OFFSET(::Printer::PrinterStatus, fanspeed_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Printer::StatusRequest)},
  { 6, -1, sizeof(::Printer::AddPrintConfig)},
  { 12, -1, sizeof(::Printer::ChangeTempControl)},
  { 18, -1, sizeof(::Printer::RemovePrintConfig)},
  { 24, -1, sizeof(::Printer::PrintConfig)},
  { 31, -1, sizeof(::Printer::PrinterStatus)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Printer::_StatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Printer::_AddPrintConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Printer::_ChangeTempControl_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Printer::_RemovePrintConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Printer::_PrintConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Printer::_PrinterStatus_default_instance_),
};

const char descriptor_table_protodef_PrinterData_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021PrinterData.proto\022\007Printer\".\n\rStatusRe"
  "quest\022\035\n\025include_print_configs\030\001 \001(\010\"<\n\016"
  "AddPrintConfig\022*\n\014print_config\030\001 \001(\0132\024.P"
  "rinter.PrintConfig\"%\n\021ChangeTempControl\022"
  "\020\n\010isActive\030\001 \001(\010\"\?\n\021RemovePrintConfig\022*"
  "\n\014print_config\030\001 \001(\0132\024.Printer.PrintConf"
  "ig\"0\n\013PrintConfig\022\023\n\013temperature\030\001 \001(\005\022\014"
  "\n\004name\030\002 \001(\t\"\202\002\n\rPrinterStatus\022\036\n\026is_tem"
  "p_control_active\030\001 \001(\010\022\033\n\023temperature_ou"
  "tside\030\002 \001(\002\022\036\n\026temperature_inside_top\030\003 "
  "\001(\002\022!\n\031temperature_inside_bottom\030\004 \001(\002\0222"
  "\n\024current_print_config\030\005 \001(\0132\024.Printer.P"
  "rintConfig\022+\n\rprint_configs\030\006 \003(\0132\024.Prin"
  "ter.PrintConfig\022\020\n\010fanSpeed\030\007 \001(\002b\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_PrinterData_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_PrinterData_2eproto_sccs[6] = {
  &scc_info_AddPrintConfig_PrinterData_2eproto.base,
  &scc_info_ChangeTempControl_PrinterData_2eproto.base,
  &scc_info_PrintConfig_PrinterData_2eproto.base,
  &scc_info_PrinterStatus_PrinterData_2eproto.base,
  &scc_info_RemovePrintConfig_PrinterData_2eproto.base,
  &scc_info_StatusRequest_PrinterData_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_PrinterData_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_PrinterData_2eproto = {
  false, false, descriptor_table_protodef_PrinterData_2eproto, "PrinterData.proto", 561,
  &descriptor_table_PrinterData_2eproto_once, descriptor_table_PrinterData_2eproto_sccs, descriptor_table_PrinterData_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_PrinterData_2eproto::offsets,
  file_level_metadata_PrinterData_2eproto, 6, file_level_enum_descriptors_PrinterData_2eproto, file_level_service_descriptors_PrinterData_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_PrinterData_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_PrinterData_2eproto)), true);
namespace Printer {

// ===================================================================

void StatusRequest::InitAsDefaultInstance() {
}
class StatusRequest::_Internal {
 public:
};

StatusRequest::StatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Printer.StatusRequest)
}
StatusRequest::StatusRequest(const StatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  include_print_configs_ = from.include_print_configs_;
  // @@protoc_insertion_point(copy_constructor:Printer.StatusRequest)
}

void StatusRequest::SharedCtor() {
  include_print_configs_ = false;
}

StatusRequest::~StatusRequest() {
  // @@protoc_insertion_point(destructor:Printer.StatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StatusRequest::ArenaDtor(void* object) {
  StatusRequest* _this = reinterpret_cast< StatusRequest* >(object);
  (void)_this;
}
void StatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusRequest& StatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatusRequest_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void StatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Printer.StatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  include_print_configs_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool include_print_configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          include_print_configs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Printer.StatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool include_print_configs = 1;
  if (this->include_print_configs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_include_print_configs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Printer.StatusRequest)
  return target;
}

size_t StatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Printer.StatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool include_print_configs = 1;
  if (this->include_print_configs() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Printer.StatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Printer.StatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Printer.StatusRequest)
    MergeFrom(*source);
  }
}

void StatusRequest::MergeFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Printer.StatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.include_print_configs() != 0) {
    _internal_set_include_print_configs(from._internal_include_print_configs());
  }
}

void StatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Printer.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusRequest::CopyFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Printer.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusRequest::IsInitialized() const {
  return true;
}

void StatusRequest::InternalSwap(StatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(include_print_configs_, other->include_print_configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPrintConfig::InitAsDefaultInstance() {
  ::Printer::_AddPrintConfig_default_instance_._instance.get_mutable()->print_config_ = const_cast< ::Printer::PrintConfig*>(
      ::Printer::PrintConfig::internal_default_instance());
}
class AddPrintConfig::_Internal {
 public:
  static const ::Printer::PrintConfig& print_config(const AddPrintConfig* msg);
};

const ::Printer::PrintConfig&
AddPrintConfig::_Internal::print_config(const AddPrintConfig* msg) {
  return *msg->print_config_;
}
AddPrintConfig::AddPrintConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Printer.AddPrintConfig)
}
AddPrintConfig::AddPrintConfig(const AddPrintConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_print_config()) {
    print_config_ = new ::Printer::PrintConfig(*from.print_config_);
  } else {
    print_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Printer.AddPrintConfig)
}

void AddPrintConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddPrintConfig_PrinterData_2eproto.base);
  print_config_ = nullptr;
}

AddPrintConfig::~AddPrintConfig() {
  // @@protoc_insertion_point(destructor:Printer.AddPrintConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPrintConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete print_config_;
}

void AddPrintConfig::ArenaDtor(void* object) {
  AddPrintConfig* _this = reinterpret_cast< AddPrintConfig* >(object);
  (void)_this;
}
void AddPrintConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPrintConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPrintConfig& AddPrintConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPrintConfig_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void AddPrintConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:Printer.AddPrintConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && print_config_ != nullptr) {
    delete print_config_;
  }
  print_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPrintConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Printer.PrintConfig print_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_print_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPrintConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Printer.AddPrintConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Printer.PrintConfig print_config = 1;
  if (this->has_print_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::print_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Printer.AddPrintConfig)
  return target;
}

size_t AddPrintConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Printer.AddPrintConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Printer.PrintConfig print_config = 1;
  if (this->has_print_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *print_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPrintConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Printer.AddPrintConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPrintConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPrintConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Printer.AddPrintConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Printer.AddPrintConfig)
    MergeFrom(*source);
  }
}

void AddPrintConfig::MergeFrom(const AddPrintConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Printer.AddPrintConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_print_config()) {
    _internal_mutable_print_config()->::Printer::PrintConfig::MergeFrom(from._internal_print_config());
  }
}

void AddPrintConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Printer.AddPrintConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPrintConfig::CopyFrom(const AddPrintConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Printer.AddPrintConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPrintConfig::IsInitialized() const {
  return true;
}

void AddPrintConfig::InternalSwap(AddPrintConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(print_config_, other->print_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPrintConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChangeTempControl::InitAsDefaultInstance() {
}
class ChangeTempControl::_Internal {
 public:
};

ChangeTempControl::ChangeTempControl(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Printer.ChangeTempControl)
}
ChangeTempControl::ChangeTempControl(const ChangeTempControl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  isactive_ = from.isactive_;
  // @@protoc_insertion_point(copy_constructor:Printer.ChangeTempControl)
}

void ChangeTempControl::SharedCtor() {
  isactive_ = false;
}

ChangeTempControl::~ChangeTempControl() {
  // @@protoc_insertion_point(destructor:Printer.ChangeTempControl)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChangeTempControl::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ChangeTempControl::ArenaDtor(void* object) {
  ChangeTempControl* _this = reinterpret_cast< ChangeTempControl* >(object);
  (void)_this;
}
void ChangeTempControl::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChangeTempControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeTempControl& ChangeTempControl::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChangeTempControl_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void ChangeTempControl::Clear() {
// @@protoc_insertion_point(message_clear_start:Printer.ChangeTempControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  isactive_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeTempControl::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool isActive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          isactive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChangeTempControl::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Printer.ChangeTempControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isActive = 1;
  if (this->isactive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_isactive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Printer.ChangeTempControl)
  return target;
}

size_t ChangeTempControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Printer.ChangeTempControl)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool isActive = 1;
  if (this->isactive() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeTempControl::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Printer.ChangeTempControl)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeTempControl* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChangeTempControl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Printer.ChangeTempControl)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Printer.ChangeTempControl)
    MergeFrom(*source);
  }
}

void ChangeTempControl::MergeFrom(const ChangeTempControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Printer.ChangeTempControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isactive() != 0) {
    _internal_set_isactive(from._internal_isactive());
  }
}

void ChangeTempControl::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Printer.ChangeTempControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeTempControl::CopyFrom(const ChangeTempControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Printer.ChangeTempControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeTempControl::IsInitialized() const {
  return true;
}

void ChangeTempControl::InternalSwap(ChangeTempControl* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(isactive_, other->isactive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeTempControl::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePrintConfig::InitAsDefaultInstance() {
  ::Printer::_RemovePrintConfig_default_instance_._instance.get_mutable()->print_config_ = const_cast< ::Printer::PrintConfig*>(
      ::Printer::PrintConfig::internal_default_instance());
}
class RemovePrintConfig::_Internal {
 public:
  static const ::Printer::PrintConfig& print_config(const RemovePrintConfig* msg);
};

const ::Printer::PrintConfig&
RemovePrintConfig::_Internal::print_config(const RemovePrintConfig* msg) {
  return *msg->print_config_;
}
RemovePrintConfig::RemovePrintConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Printer.RemovePrintConfig)
}
RemovePrintConfig::RemovePrintConfig(const RemovePrintConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_print_config()) {
    print_config_ = new ::Printer::PrintConfig(*from.print_config_);
  } else {
    print_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Printer.RemovePrintConfig)
}

void RemovePrintConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemovePrintConfig_PrinterData_2eproto.base);
  print_config_ = nullptr;
}

RemovePrintConfig::~RemovePrintConfig() {
  // @@protoc_insertion_point(destructor:Printer.RemovePrintConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePrintConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete print_config_;
}

void RemovePrintConfig::ArenaDtor(void* object) {
  RemovePrintConfig* _this = reinterpret_cast< RemovePrintConfig* >(object);
  (void)_this;
}
void RemovePrintConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePrintConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePrintConfig& RemovePrintConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePrintConfig_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void RemovePrintConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:Printer.RemovePrintConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && print_config_ != nullptr) {
    delete print_config_;
  }
  print_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePrintConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Printer.PrintConfig print_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_print_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePrintConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Printer.RemovePrintConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Printer.PrintConfig print_config = 1;
  if (this->has_print_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::print_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Printer.RemovePrintConfig)
  return target;
}

size_t RemovePrintConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Printer.RemovePrintConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Printer.PrintConfig print_config = 1;
  if (this->has_print_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *print_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePrintConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Printer.RemovePrintConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePrintConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePrintConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Printer.RemovePrintConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Printer.RemovePrintConfig)
    MergeFrom(*source);
  }
}

void RemovePrintConfig::MergeFrom(const RemovePrintConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Printer.RemovePrintConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_print_config()) {
    _internal_mutable_print_config()->::Printer::PrintConfig::MergeFrom(from._internal_print_config());
  }
}

void RemovePrintConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Printer.RemovePrintConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePrintConfig::CopyFrom(const RemovePrintConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Printer.RemovePrintConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePrintConfig::IsInitialized() const {
  return true;
}

void RemovePrintConfig::InternalSwap(RemovePrintConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(print_config_, other->print_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePrintConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrintConfig::InitAsDefaultInstance() {
}
class PrintConfig::_Internal {
 public:
};

PrintConfig::PrintConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Printer.PrintConfig)
}
PrintConfig::PrintConfig(const PrintConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  temperature_ = from.temperature_;
  // @@protoc_insertion_point(copy_constructor:Printer.PrintConfig)
}

void PrintConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrintConfig_PrinterData_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  temperature_ = 0;
}

PrintConfig::~PrintConfig() {
  // @@protoc_insertion_point(destructor:Printer.PrintConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrintConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PrintConfig::ArenaDtor(void* object) {
  PrintConfig* _this = reinterpret_cast< PrintConfig* >(object);
  (void)_this;
}
void PrintConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrintConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrintConfig& PrintConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrintConfig_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void PrintConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:Printer.PrintConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  temperature_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrintConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 temperature = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          temperature_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Printer.PrintConfig.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrintConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Printer.PrintConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 temperature = 1;
  if (this->temperature() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_temperature(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Printer.PrintConfig.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Printer.PrintConfig)
  return target;
}

size_t PrintConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Printer.PrintConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 temperature = 1;
  if (this->temperature() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_temperature());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Printer.PrintConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrintConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Printer.PrintConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Printer.PrintConfig)
    MergeFrom(*source);
  }
}

void PrintConfig::MergeFrom(const PrintConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Printer.PrintConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.temperature() != 0) {
    _internal_set_temperature(from._internal_temperature());
  }
}

void PrintConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Printer.PrintConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintConfig::CopyFrom(const PrintConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Printer.PrintConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintConfig::IsInitialized() const {
  return true;
}

void PrintConfig::InternalSwap(PrintConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(temperature_, other->temperature_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrintConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrinterStatus::InitAsDefaultInstance() {
  ::Printer::_PrinterStatus_default_instance_._instance.get_mutable()->current_print_config_ = const_cast< ::Printer::PrintConfig*>(
      ::Printer::PrintConfig::internal_default_instance());
}
class PrinterStatus::_Internal {
 public:
  static const ::Printer::PrintConfig& current_print_config(const PrinterStatus* msg);
};

const ::Printer::PrintConfig&
PrinterStatus::_Internal::current_print_config(const PrinterStatus* msg) {
  return *msg->current_print_config_;
}
PrinterStatus::PrinterStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  print_configs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Printer.PrinterStatus)
}
PrinterStatus::PrinterStatus(const PrinterStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      print_configs_(from.print_configs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_current_print_config()) {
    current_print_config_ = new ::Printer::PrintConfig(*from.current_print_config_);
  } else {
    current_print_config_ = nullptr;
  }
  ::memcpy(&is_temp_control_active_, &from.is_temp_control_active_,
    static_cast<size_t>(reinterpret_cast<char*>(&fanspeed_) -
    reinterpret_cast<char*>(&is_temp_control_active_)) + sizeof(fanspeed_));
  // @@protoc_insertion_point(copy_constructor:Printer.PrinterStatus)
}

void PrinterStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrinterStatus_PrinterData_2eproto.base);
  ::memset(&current_print_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fanspeed_) -
      reinterpret_cast<char*>(&current_print_config_)) + sizeof(fanspeed_));
}

PrinterStatus::~PrinterStatus() {
  // @@protoc_insertion_point(destructor:Printer.PrinterStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrinterStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete current_print_config_;
}

void PrinterStatus::ArenaDtor(void* object) {
  PrinterStatus* _this = reinterpret_cast< PrinterStatus* >(object);
  (void)_this;
}
void PrinterStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrinterStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrinterStatus& PrinterStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrinterStatus_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void PrinterStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:Printer.PrinterStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  print_configs_.Clear();
  if (GetArena() == nullptr && current_print_config_ != nullptr) {
    delete current_print_config_;
  }
  current_print_config_ = nullptr;
  ::memset(&is_temp_control_active_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fanspeed_) -
      reinterpret_cast<char*>(&is_temp_control_active_)) + sizeof(fanspeed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrinterStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_temp_control_active = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_temp_control_active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float temperature_outside = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          temperature_outside_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temperature_inside_top = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          temperature_inside_top_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temperature_inside_bottom = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          temperature_inside_bottom_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // .Printer.PrintConfig current_print_config = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_current_print_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Printer.PrintConfig print_configs = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_print_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // float fanSpeed = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          fanspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrinterStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Printer.PrinterStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_temp_control_active = 1;
  if (this->is_temp_control_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_temp_control_active(), target);
  }

  // float temperature_outside = 2;
  if (!(this->temperature_outside() <= 0 && this->temperature_outside() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_temperature_outside(), target);
  }

  // float temperature_inside_top = 3;
  if (!(this->temperature_inside_top() <= 0 && this->temperature_inside_top() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_temperature_inside_top(), target);
  }

  // float temperature_inside_bottom = 4;
  if (!(this->temperature_inside_bottom() <= 0 && this->temperature_inside_bottom() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_temperature_inside_bottom(), target);
  }

  // .Printer.PrintConfig current_print_config = 5;
  if (this->has_current_print_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::current_print_config(this), target, stream);
  }

  // repeated .Printer.PrintConfig print_configs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_print_configs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_print_configs(i), target, stream);
  }

  // float fanSpeed = 7;
  if (!(this->fanspeed() <= 0 && this->fanspeed() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_fanspeed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Printer.PrinterStatus)
  return target;
}

size_t PrinterStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Printer.PrinterStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Printer.PrintConfig print_configs = 6;
  total_size += 1UL * this->_internal_print_configs_size();
  for (const auto& msg : this->print_configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Printer.PrintConfig current_print_config = 5;
  if (this->has_current_print_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *current_print_config_);
  }

  // bool is_temp_control_active = 1;
  if (this->is_temp_control_active() != 0) {
    total_size += 1 + 1;
  }

  // float temperature_outside = 2;
  if (!(this->temperature_outside() <= 0 && this->temperature_outside() >= 0)) {
    total_size += 1 + 4;
  }

  // float temperature_inside_top = 3;
  if (!(this->temperature_inside_top() <= 0 && this->temperature_inside_top() >= 0)) {
    total_size += 1 + 4;
  }

  // float temperature_inside_bottom = 4;
  if (!(this->temperature_inside_bottom() <= 0 && this->temperature_inside_bottom() >= 0)) {
    total_size += 1 + 4;
  }

  // float fanSpeed = 7;
  if (!(this->fanspeed() <= 0 && this->fanspeed() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrinterStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Printer.PrinterStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const PrinterStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrinterStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Printer.PrinterStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Printer.PrinterStatus)
    MergeFrom(*source);
  }
}

void PrinterStatus::MergeFrom(const PrinterStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Printer.PrinterStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  print_configs_.MergeFrom(from.print_configs_);
  if (from.has_current_print_config()) {
    _internal_mutable_current_print_config()->::Printer::PrintConfig::MergeFrom(from._internal_current_print_config());
  }
  if (from.is_temp_control_active() != 0) {
    _internal_set_is_temp_control_active(from._internal_is_temp_control_active());
  }
  if (!(from.temperature_outside() <= 0 && from.temperature_outside() >= 0)) {
    _internal_set_temperature_outside(from._internal_temperature_outside());
  }
  if (!(from.temperature_inside_top() <= 0 && from.temperature_inside_top() >= 0)) {
    _internal_set_temperature_inside_top(from._internal_temperature_inside_top());
  }
  if (!(from.temperature_inside_bottom() <= 0 && from.temperature_inside_bottom() >= 0)) {
    _internal_set_temperature_inside_bottom(from._internal_temperature_inside_bottom());
  }
  if (!(from.fanspeed() <= 0 && from.fanspeed() >= 0)) {
    _internal_set_fanspeed(from._internal_fanspeed());
  }
}

void PrinterStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Printer.PrinterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrinterStatus::CopyFrom(const PrinterStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Printer.PrinterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrinterStatus::IsInitialized() const {
  return true;
}

void PrinterStatus::InternalSwap(PrinterStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  print_configs_.InternalSwap(&other->print_configs_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PrinterStatus, fanspeed_)
      + sizeof(PrinterStatus::fanspeed_)
      - PROTOBUF_FIELD_OFFSET(PrinterStatus, current_print_config_)>(
          reinterpret_cast<char*>(&current_print_config_),
          reinterpret_cast<char*>(&other->current_print_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PrinterStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Printer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Printer::StatusRequest* Arena::CreateMaybeMessage< ::Printer::StatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Printer::StatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Printer::AddPrintConfig* Arena::CreateMaybeMessage< ::Printer::AddPrintConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Printer::AddPrintConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::Printer::ChangeTempControl* Arena::CreateMaybeMessage< ::Printer::ChangeTempControl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Printer::ChangeTempControl >(arena);
}
template<> PROTOBUF_NOINLINE ::Printer::RemovePrintConfig* Arena::CreateMaybeMessage< ::Printer::RemovePrintConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Printer::RemovePrintConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::Printer::PrintConfig* Arena::CreateMaybeMessage< ::Printer::PrintConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Printer::PrintConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::Printer::PrinterStatus* Arena::CreateMaybeMessage< ::Printer::PrinterStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Printer::PrinterStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
