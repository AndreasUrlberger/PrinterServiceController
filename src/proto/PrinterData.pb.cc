// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PrinterData.proto

#include "PrinterData.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_PrinterData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrintConfig_PrinterData_2eproto;
namespace printer {
class KeepAliveDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeepAlive> _instance;
} _KeepAlive_default_instance_;
class PrintConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrintConfig> _instance;
} _PrintConfig_default_instance_;
class ChangeConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChangeConfig> _instance;
} _ChangeConfig_default_instance_;
class RequestStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestStatus> _instance;
} _RequestStatus_default_instance_;
class PrinterStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrinterStatus> _instance;
} _PrinterStatus_default_instance_;
}  // namespace printer
static void InitDefaultsscc_info_ChangeConfig_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::printer::_ChangeConfig_default_instance_;
    new (ptr) ::printer::ChangeConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::printer::ChangeConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChangeConfig_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChangeConfig_PrinterData_2eproto}, {
      &scc_info_PrintConfig_PrinterData_2eproto.base,}};

static void InitDefaultsscc_info_KeepAlive_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::printer::_KeepAlive_default_instance_;
    new (ptr) ::printer::KeepAlive();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::printer::KeepAlive::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeepAlive_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_KeepAlive_PrinterData_2eproto}, {}};

static void InitDefaultsscc_info_PrintConfig_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::printer::_PrintConfig_default_instance_;
    new (ptr) ::printer::PrintConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::printer::PrintConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrintConfig_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrintConfig_PrinterData_2eproto}, {}};

static void InitDefaultsscc_info_PrinterStatus_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::printer::_PrinterStatus_default_instance_;
    new (ptr) ::printer::PrinterStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::printer::PrinterStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrinterStatus_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PrinterStatus_PrinterData_2eproto}, {
      &scc_info_PrintConfig_PrinterData_2eproto.base,}};

static void InitDefaultsscc_info_RequestStatus_PrinterData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::printer::_RequestStatus_default_instance_;
    new (ptr) ::printer::RequestStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::printer::RequestStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestStatus_PrinterData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RequestStatus_PrinterData_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_PrinterData_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_PrinterData_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_PrinterData_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_PrinterData_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::printer::KeepAlive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::printer::KeepAlive, keepalive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::printer::PrintConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::printer::PrintConfig, temperature_),
  PROTOBUF_FIELD_OFFSET(::printer::PrintConfig, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::printer::ChangeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::printer::ChangeConfig, changetype_),
  PROTOBUF_FIELD_OFFSET(::printer::ChangeConfig, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::printer::RequestStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::printer::RequestStatus, sendconfigs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::printer::PrinterStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::printer::PrinterStatus, istempcontrolactive_),
  PROTOBUF_FIELD_OFFSET(::printer::PrinterStatus, temperatureoutside_),
  PROTOBUF_FIELD_OFFSET(::printer::PrinterStatus, temperatureinsidetop_),
  PROTOBUF_FIELD_OFFSET(::printer::PrinterStatus, temperatureinsidebottom_),
  PROTOBUF_FIELD_OFFSET(::printer::PrinterStatus, printconfigs_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::printer::KeepAlive)},
  { 6, -1, sizeof(::printer::PrintConfig)},
  { 13, -1, sizeof(::printer::ChangeConfig)},
  { 20, -1, sizeof(::printer::RequestStatus)},
  { 26, -1, sizeof(::printer::PrinterStatus)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::printer::_KeepAlive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::printer::_PrintConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::printer::_ChangeConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::printer::_RequestStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::printer::_PrinterStatus_default_instance_),
};

const char descriptor_table_protodef_PrinterData_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021PrinterData.proto\022\007printer\"\036\n\tKeepAliv"
  "e\022\021\n\tkeepAlive\030\001 \001(\010\"0\n\013PrintConfig\022\023\n\013t"
  "emperature\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\"\231\001\n\014Chang"
  "eConfig\022:\n\nchangeType\030\001 \001(\0162&.printer.Ch"
  "angeConfig.ConfigChangeType\022$\n\006config\030\002 "
  "\001(\0132\024.printer.PrintConfig\"\'\n\020ConfigChang"
  "eType\022\007\n\003ADD\020\000\022\n\n\006REMOVE\020\001\"$\n\rRequestSta"
  "tus\022\023\n\013sendConfigs\030\001 \001(\010\"\263\001\n\rPrinterStat"
  "us\022\033\n\023isTempControlActive\030\001 \001(\010\022\032\n\022tempe"
  "ratureOutside\030\002 \001(\002\022\034\n\024temperatureInside"
  "Top\030\003 \001(\002\022\037\n\027temperatureInsideBottom\030\004 \001"
  "(\002\022*\n\014printConfigs\030\005 \003(\0132\024.printer.Print"
  "Configb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_PrinterData_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_PrinterData_2eproto_sccs[5] = {
  &scc_info_ChangeConfig_PrinterData_2eproto.base,
  &scc_info_KeepAlive_PrinterData_2eproto.base,
  &scc_info_PrintConfig_PrinterData_2eproto.base,
  &scc_info_PrinterStatus_PrinterData_2eproto.base,
  &scc_info_RequestStatus_PrinterData_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_PrinterData_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_PrinterData_2eproto = {
  false, false, descriptor_table_protodef_PrinterData_2eproto, "PrinterData.proto", 494,
  &descriptor_table_PrinterData_2eproto_once, descriptor_table_PrinterData_2eproto_sccs, descriptor_table_PrinterData_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_PrinterData_2eproto::offsets,
  file_level_metadata_PrinterData_2eproto, 5, file_level_enum_descriptors_PrinterData_2eproto, file_level_service_descriptors_PrinterData_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_PrinterData_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_PrinterData_2eproto)), true);
namespace printer {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChangeConfig_ConfigChangeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_PrinterData_2eproto);
  return file_level_enum_descriptors_PrinterData_2eproto[0];
}
bool ChangeConfig_ConfigChangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ChangeConfig_ConfigChangeType ChangeConfig::ADD;
constexpr ChangeConfig_ConfigChangeType ChangeConfig::REMOVE;
constexpr ChangeConfig_ConfigChangeType ChangeConfig::ConfigChangeType_MIN;
constexpr ChangeConfig_ConfigChangeType ChangeConfig::ConfigChangeType_MAX;
constexpr int ChangeConfig::ConfigChangeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void KeepAlive::InitAsDefaultInstance() {
}
class KeepAlive::_Internal {
 public:
};

KeepAlive::KeepAlive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:printer.KeepAlive)
}
KeepAlive::KeepAlive(const KeepAlive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keepalive_ = from.keepalive_;
  // @@protoc_insertion_point(copy_constructor:printer.KeepAlive)
}

void KeepAlive::SharedCtor() {
  keepalive_ = false;
}

KeepAlive::~KeepAlive() {
  // @@protoc_insertion_point(destructor:printer.KeepAlive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeepAlive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void KeepAlive::ArenaDtor(void* object) {
  KeepAlive* _this = reinterpret_cast< KeepAlive* >(object);
  (void)_this;
}
void KeepAlive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeepAlive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeepAlive& KeepAlive::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeepAlive_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void KeepAlive::Clear() {
// @@protoc_insertion_point(message_clear_start:printer.KeepAlive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keepalive_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeepAlive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool keepAlive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          keepalive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeepAlive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:printer.KeepAlive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool keepAlive = 1;
  if (this->keepalive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_keepalive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:printer.KeepAlive)
  return target;
}

size_t KeepAlive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:printer.KeepAlive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool keepAlive = 1;
  if (this->keepalive() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeepAlive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:printer.KeepAlive)
  GOOGLE_DCHECK_NE(&from, this);
  const KeepAlive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeepAlive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:printer.KeepAlive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:printer.KeepAlive)
    MergeFrom(*source);
  }
}

void KeepAlive::MergeFrom(const KeepAlive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:printer.KeepAlive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keepalive() != 0) {
    _internal_set_keepalive(from._internal_keepalive());
  }
}

void KeepAlive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:printer.KeepAlive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAlive::CopyFrom(const KeepAlive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:printer.KeepAlive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAlive::IsInitialized() const {
  return true;
}

void KeepAlive::InternalSwap(KeepAlive* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(keepalive_, other->keepalive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeepAlive::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrintConfig::InitAsDefaultInstance() {
}
class PrintConfig::_Internal {
 public:
};

PrintConfig::PrintConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:printer.PrintConfig)
}
PrintConfig::PrintConfig(const PrintConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  temperature_ = from.temperature_;
  // @@protoc_insertion_point(copy_constructor:printer.PrintConfig)
}

void PrintConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrintConfig_PrinterData_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  temperature_ = 0;
}

PrintConfig::~PrintConfig() {
  // @@protoc_insertion_point(destructor:printer.PrintConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrintConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PrintConfig::ArenaDtor(void* object) {
  PrintConfig* _this = reinterpret_cast< PrintConfig* >(object);
  (void)_this;
}
void PrintConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrintConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrintConfig& PrintConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrintConfig_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void PrintConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:printer.PrintConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  temperature_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrintConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 temperature = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          temperature_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "printer.PrintConfig.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrintConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:printer.PrintConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 temperature = 1;
  if (this->temperature() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_temperature(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "printer.PrintConfig.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:printer.PrintConfig)
  return target;
}

size_t PrintConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:printer.PrintConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 temperature = 1;
  if (this->temperature() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_temperature());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:printer.PrintConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrintConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:printer.PrintConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:printer.PrintConfig)
    MergeFrom(*source);
  }
}

void PrintConfig::MergeFrom(const PrintConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:printer.PrintConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.temperature() != 0) {
    _internal_set_temperature(from._internal_temperature());
  }
}

void PrintConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:printer.PrintConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintConfig::CopyFrom(const PrintConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:printer.PrintConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintConfig::IsInitialized() const {
  return true;
}

void PrintConfig::InternalSwap(PrintConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(temperature_, other->temperature_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrintConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChangeConfig::InitAsDefaultInstance() {
  ::printer::_ChangeConfig_default_instance_._instance.get_mutable()->config_ = const_cast< ::printer::PrintConfig*>(
      ::printer::PrintConfig::internal_default_instance());
}
class ChangeConfig::_Internal {
 public:
  static const ::printer::PrintConfig& config(const ChangeConfig* msg);
};

const ::printer::PrintConfig&
ChangeConfig::_Internal::config(const ChangeConfig* msg) {
  return *msg->config_;
}
ChangeConfig::ChangeConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:printer.ChangeConfig)
}
ChangeConfig::ChangeConfig(const ChangeConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    config_ = new ::printer::PrintConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  changetype_ = from.changetype_;
  // @@protoc_insertion_point(copy_constructor:printer.ChangeConfig)
}

void ChangeConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChangeConfig_PrinterData_2eproto.base);
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&changetype_) -
      reinterpret_cast<char*>(&config_)) + sizeof(changetype_));
}

ChangeConfig::~ChangeConfig() {
  // @@protoc_insertion_point(destructor:printer.ChangeConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChangeConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete config_;
}

void ChangeConfig::ArenaDtor(void* object) {
  ChangeConfig* _this = reinterpret_cast< ChangeConfig* >(object);
  (void)_this;
}
void ChangeConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChangeConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeConfig& ChangeConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChangeConfig_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void ChangeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:printer.ChangeConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  changetype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .printer.ChangeConfig.ConfigChangeType changeType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_changetype(static_cast<::printer::ChangeConfig_ConfigChangeType>(val));
        } else goto handle_unusual;
        continue;
      // .printer.PrintConfig config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChangeConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:printer.ChangeConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .printer.ChangeConfig.ConfigChangeType changeType = 1;
  if (this->changetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_changetype(), target);
  }

  // .printer.PrintConfig config = 2;
  if (this->has_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:printer.ChangeConfig)
  return target;
}

size_t ChangeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:printer.ChangeConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .printer.PrintConfig config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .printer.ChangeConfig.ConfigChangeType changeType = 1;
  if (this->changetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_changetype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:printer.ChangeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChangeConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:printer.ChangeConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:printer.ChangeConfig)
    MergeFrom(*source);
  }
}

void ChangeConfig::MergeFrom(const ChangeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:printer.ChangeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    _internal_mutable_config()->::printer::PrintConfig::MergeFrom(from._internal_config());
  }
  if (from.changetype() != 0) {
    _internal_set_changetype(from._internal_changetype());
  }
}

void ChangeConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:printer.ChangeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeConfig::CopyFrom(const ChangeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:printer.ChangeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeConfig::IsInitialized() const {
  return true;
}

void ChangeConfig::InternalSwap(ChangeConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChangeConfig, changetype_)
      + sizeof(ChangeConfig::changetype_)
      - PROTOBUF_FIELD_OFFSET(ChangeConfig, config_)>(
          reinterpret_cast<char*>(&config_),
          reinterpret_cast<char*>(&other->config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestStatus::InitAsDefaultInstance() {
}
class RequestStatus::_Internal {
 public:
};

RequestStatus::RequestStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:printer.RequestStatus)
}
RequestStatus::RequestStatus(const RequestStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sendconfigs_ = from.sendconfigs_;
  // @@protoc_insertion_point(copy_constructor:printer.RequestStatus)
}

void RequestStatus::SharedCtor() {
  sendconfigs_ = false;
}

RequestStatus::~RequestStatus() {
  // @@protoc_insertion_point(destructor:printer.RequestStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RequestStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RequestStatus::ArenaDtor(void* object) {
  RequestStatus* _this = reinterpret_cast< RequestStatus* >(object);
  (void)_this;
}
void RequestStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestStatus& RequestStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestStatus_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void RequestStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:printer.RequestStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sendconfigs_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool sendConfigs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sendconfigs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:printer.RequestStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool sendConfigs = 1;
  if (this->sendconfigs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_sendconfigs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:printer.RequestStatus)
  return target;
}

size_t RequestStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:printer.RequestStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool sendConfigs = 1;
  if (this->sendconfigs() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:printer.RequestStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:printer.RequestStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:printer.RequestStatus)
    MergeFrom(*source);
  }
}

void RequestStatus::MergeFrom(const RequestStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:printer.RequestStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sendconfigs() != 0) {
    _internal_set_sendconfigs(from._internal_sendconfigs());
  }
}

void RequestStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:printer.RequestStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestStatus::CopyFrom(const RequestStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:printer.RequestStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestStatus::IsInitialized() const {
  return true;
}

void RequestStatus::InternalSwap(RequestStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(sendconfigs_, other->sendconfigs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrinterStatus::InitAsDefaultInstance() {
}
class PrinterStatus::_Internal {
 public:
};

PrinterStatus::PrinterStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  printconfigs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:printer.PrinterStatus)
}
PrinterStatus::PrinterStatus(const PrinterStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      printconfigs_(from.printconfigs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&istempcontrolactive_, &from.istempcontrolactive_,
    static_cast<size_t>(reinterpret_cast<char*>(&temperatureinsidebottom_) -
    reinterpret_cast<char*>(&istempcontrolactive_)) + sizeof(temperatureinsidebottom_));
  // @@protoc_insertion_point(copy_constructor:printer.PrinterStatus)
}

void PrinterStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrinterStatus_PrinterData_2eproto.base);
  ::memset(&istempcontrolactive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temperatureinsidebottom_) -
      reinterpret_cast<char*>(&istempcontrolactive_)) + sizeof(temperatureinsidebottom_));
}

PrinterStatus::~PrinterStatus() {
  // @@protoc_insertion_point(destructor:printer.PrinterStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrinterStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PrinterStatus::ArenaDtor(void* object) {
  PrinterStatus* _this = reinterpret_cast< PrinterStatus* >(object);
  (void)_this;
}
void PrinterStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrinterStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrinterStatus& PrinterStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrinterStatus_PrinterData_2eproto.base);
  return *internal_default_instance();
}


void PrinterStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:printer.PrinterStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  printconfigs_.Clear();
  ::memset(&istempcontrolactive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temperatureinsidebottom_) -
      reinterpret_cast<char*>(&istempcontrolactive_)) + sizeof(temperatureinsidebottom_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrinterStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool isTempControlActive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          istempcontrolactive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float temperatureOutside = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          temperatureoutside_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temperatureInsideTop = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          temperatureinsidetop_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temperatureInsideBottom = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          temperatureinsidebottom_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated .printer.PrintConfig printConfigs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_printconfigs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrinterStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:printer.PrinterStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isTempControlActive = 1;
  if (this->istempcontrolactive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_istempcontrolactive(), target);
  }

  // float temperatureOutside = 2;
  if (!(this->temperatureoutside() <= 0 && this->temperatureoutside() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_temperatureoutside(), target);
  }

  // float temperatureInsideTop = 3;
  if (!(this->temperatureinsidetop() <= 0 && this->temperatureinsidetop() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_temperatureinsidetop(), target);
  }

  // float temperatureInsideBottom = 4;
  if (!(this->temperatureinsidebottom() <= 0 && this->temperatureinsidebottom() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_temperatureinsidebottom(), target);
  }

  // repeated .printer.PrintConfig printConfigs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_printconfigs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_printconfigs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:printer.PrinterStatus)
  return target;
}

size_t PrinterStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:printer.PrinterStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .printer.PrintConfig printConfigs = 5;
  total_size += 1UL * this->_internal_printconfigs_size();
  for (const auto& msg : this->printconfigs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool isTempControlActive = 1;
  if (this->istempcontrolactive() != 0) {
    total_size += 1 + 1;
  }

  // float temperatureOutside = 2;
  if (!(this->temperatureoutside() <= 0 && this->temperatureoutside() >= 0)) {
    total_size += 1 + 4;
  }

  // float temperatureInsideTop = 3;
  if (!(this->temperatureinsidetop() <= 0 && this->temperatureinsidetop() >= 0)) {
    total_size += 1 + 4;
  }

  // float temperatureInsideBottom = 4;
  if (!(this->temperatureinsidebottom() <= 0 && this->temperatureinsidebottom() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrinterStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:printer.PrinterStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const PrinterStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrinterStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:printer.PrinterStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:printer.PrinterStatus)
    MergeFrom(*source);
  }
}

void PrinterStatus::MergeFrom(const PrinterStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:printer.PrinterStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  printconfigs_.MergeFrom(from.printconfigs_);
  if (from.istempcontrolactive() != 0) {
    _internal_set_istempcontrolactive(from._internal_istempcontrolactive());
  }
  if (!(from.temperatureoutside() <= 0 && from.temperatureoutside() >= 0)) {
    _internal_set_temperatureoutside(from._internal_temperatureoutside());
  }
  if (!(from.temperatureinsidetop() <= 0 && from.temperatureinsidetop() >= 0)) {
    _internal_set_temperatureinsidetop(from._internal_temperatureinsidetop());
  }
  if (!(from.temperatureinsidebottom() <= 0 && from.temperatureinsidebottom() >= 0)) {
    _internal_set_temperatureinsidebottom(from._internal_temperatureinsidebottom());
  }
}

void PrinterStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:printer.PrinterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrinterStatus::CopyFrom(const PrinterStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:printer.PrinterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrinterStatus::IsInitialized() const {
  return true;
}

void PrinterStatus::InternalSwap(PrinterStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  printconfigs_.InternalSwap(&other->printconfigs_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PrinterStatus, temperatureinsidebottom_)
      + sizeof(PrinterStatus::temperatureinsidebottom_)
      - PROTOBUF_FIELD_OFFSET(PrinterStatus, istempcontrolactive_)>(
          reinterpret_cast<char*>(&istempcontrolactive_),
          reinterpret_cast<char*>(&other->istempcontrolactive_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PrinterStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace printer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::printer::KeepAlive* Arena::CreateMaybeMessage< ::printer::KeepAlive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::printer::KeepAlive >(arena);
}
template<> PROTOBUF_NOINLINE ::printer::PrintConfig* Arena::CreateMaybeMessage< ::printer::PrintConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::printer::PrintConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::printer::ChangeConfig* Arena::CreateMaybeMessage< ::printer::ChangeConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::printer::ChangeConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::printer::RequestStatus* Arena::CreateMaybeMessage< ::printer::RequestStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::printer::RequestStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::printer::PrinterStatus* Arena::CreateMaybeMessage< ::printer::PrinterStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::printer::PrinterStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
